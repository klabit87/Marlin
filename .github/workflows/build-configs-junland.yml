name: Build junland's Configs

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [ marlin-2.1.1 ]
  pull_request:
    branches: [ marlin-2.1.1 ]
  workflow_dispatch:

jobs:
  Build-BLTouch:
    name: Build BL-Touch Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [G32,N32]
        grid: [3,4,5,9]
        highspeed: [true,false]
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Run OS Update
      run: |
        sudo apt update && sudo apt upgrade -y 
        sudo apt autoremove -y && sudo apt clean all -y
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
        HS: ${{ matrix.highspeed }}
      run: |
        if ($HS); then HSTMP=-HS; else HSTMP=; fi;
        if [ "$AQUILA_VER" = G32 ]; then AVTMP="G32"; else AVTMP="N32"; fi;
        echo "::set-output name=filename::BLTouch-${GRID}x${GRID}${HSTMP}-${AVTMP}.bin"
        cp config/junland_config/Configuration.h Marlin/Configuration.h
        cp config/junland_config/Configuration_adv.h Marlin/Configuration_adv.h
        sed -i "s/default_envs =.*/default_envs = STM32F103RET6_voxelab_aquila_$AQUILA_VER/g" platformio.ini
        sed -i "s/#define GRID_MAX_POINTS_X.*/#define GRID_MAX_POINTS_X $GRID/g" Marlin/Configuration.h
        if ($HS); then TEMP=; else TEMP='\/\/'; fi;
        sed -i "s/[^ ]*#define BLTOUCH_HS_MODE/$TEMP#define BLTOUCH_HS_MODE/g" Marlin/Configuration_adv.h
        pio run
        mkdir temp
        mv -v .pio/build/STM32F103RET6_voxelab_aquila_$AQUILA_VER/*.bin temp/build.bin
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.build_configs.outputs.filename }}
        path: temp/build.bin
