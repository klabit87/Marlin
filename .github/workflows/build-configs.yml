name: Build Configs

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [ main,stable,dev ]
  pull_request:
    branches: [ main,stable,dev ]
  release:
    types: [created]
  workflow_dispatch:

env:
  PLATFORMIO_VER: 6.1.5

jobs:
  Build-Default:
    name: Build Default Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [G32,N32]
    steps:
    - name: Run OS Update
      run: sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get autoremove -y
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Inject requirements.txt Dependencies
      run: |
        echo "wheel" > requirements.txt
        echo "platformio==$PLATFORMIO_VER" >> requirements.txt
    - name: Setup Python and Cache
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies
    - name: Setup Build Dependencies
	  run: pip install -r requirements.txt
    - name: Run Build
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        FIRMWARE_NAME: Default-NoProbe-${{ matrix.chip }}
      run: |
        FIRMWARE_NAME=${{ env.FIRMWARE_NAME }} make Default-NoProbe
        echo "FIRMWARE_NAME=${{ env.FIRMWARE_NAME }}" >> $GITHUB_ENV
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.FIRMWARE_NAME }}
        path: |
          .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/${{ env.FIRMWARE_NAME }}.bin
          .pio/build/*.h
  
  Build-BLTouch:
    name: Build BL-Touch Files
    runs-on: ubuntu-latest
	needs: Build-Default
    strategy:
      matrix:
        chip: [G32,N32]
        grid: [3,4,5,9]
        highspeed: [true,false]
    steps:
    - name: Run OS Update
      run: sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get autoremove -y
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Inject requirements.txt Dependencies
      run: |
        echo "wheel" > requirements.txt
        echo "platformio==$PLATFORMIO_VER" >> requirements.txt
    - name: Setup Python and Cache
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies
    - name: Setup Build Dependencies
	  run: pip install -r requirements.txt
    - name: Run Build
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
        HS: ${{ matrix.highspeed }}
        FIRMWARE_NAME: BLTouch-${{ matrix.grid }}x${{ matrix.grid }}${{ matrix.highspeed == 'true' && '-HS' || '' }}-${{ matrix.chip }}
      run: |
        FIRMWARE_NAME=${{ env.FIRMWARE_NAME }} make BLTouch
        echo "FIRMWARE_NAME=${{ env.FIRMWARE_NAME }}" >> $GITHUB_ENV
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.FIRMWARE_NAME }}
        path: |
          .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/${{ env.FIRMWARE_NAME }}.bin
          .pio/build/*.h
  
  Build-ManualMesh:
    name: Build Manual-Mesh Files
    runs-on: ubuntu-latest
	needs: Build-Default
    strategy:
      matrix:
        chip: [G32,N32]
        grid: [3,4,5]
    steps:
    - name: Run OS Update
      run: sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get autoremove -y
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Inject requirements.txt Dependencies
      run: |
        echo "wheel" > requirements.txt
        echo "platformio==$PLATFORMIO_VER" >> requirements.txt
    - name: Setup Python and Cache
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies
    - name: Setup Build Dependencies
	  run: pip install -r requirements.txt
    - name: Run Build
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
        FIRMWARE_NAME: ManualMesh-${{ matrix.grid }}x${{ matrix.grid }}-${{ matrix.chip }}
      run: |
        FIRMWARE_NAME=${{ env.FIRMWARE_NAME }} make ManualMesh
        echo "FIRMWARE_NAME=${{ env.FIRMWARE_NAME }}" >> $GITHUB_ENV
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.FIRMWARE_NAME }}
        path: |
          .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/${{ env.FIRMWARE_NAME }}.bin
          .pio/build/*.h
 
  Build-UBL-BLTouch:
    name: Build UBL with BL-Touch Files
    runs-on: ubuntu-latest
	needs: Build-Default
    strategy:
      matrix:
        chip: [G32,N32]
        grid: [10,15]
        highspeed: [true,false]
    steps:
    - name: Run OS Update
      run: sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get autoremove -y
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Inject requirements.txt Dependencies
      run: |
        echo "wheel" > requirements.txt
        echo "platformio==$PLATFORMIO_VER" >> requirements.txt
    - name: Setup Python and Cache
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies
    - name: Setup Build Dependencies
	  run: pip install -r requirements.txt
    - name: Run Build
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
        HS: ${{ matrix.highspeed }}
        FIRMWARE_NAME: UBL-BLTouch-${{ matrix.grid }}x${{ matrix.grid }}${{ matrix.highspeed == 'true' && '-HS' || '' }}-${{ matrix.chip }}
      run: |
        FIRMWARE_NAME=${{ env.FIRMWARE_NAME }} make UBL-BLTouch
        echo "FIRMWARE_NAME=${{ env.FIRMWARE_NAME }}" >> $GITHUB_ENV
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.FIRMWARE_NAME }}
        path: |
          .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/${{ env.FIRMWARE_NAME }}.bin
          .pio/build/*.h
  
  Build-UBL-NoProbe:
    name: Build UBL with NoProbe Files
    runs-on: ubuntu-latest
	needs: Build-Default
    strategy:
      matrix:
        chip: [G32,N32]
        grid: [3,5]
    steps:
    - name: Run OS Update
      run: sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get autoremove -y
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Inject requirements.txt Dependencies
      run: |
        echo "wheel" > requirements.txt
        echo "platformio==$PLATFORMIO_VER" >> requirements.txt
    - name: Setup Python and Cache
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip' # caching pip dependencies
    - name: Setup Build Dependencies
	  run: pip install -r requirements.txt
    - name: Run Build
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
        FIRMWARE_NAME: UBL-NoProbe-${{ matrix.grid }}x${{ matrix.grid }}-${{ matrix.chip }}
      run: |
        FIRMWARE_NAME=${{ env.FIRMWARE_NAME }} make UBL-NoProbe
        echo "FIRMWARE_NAME=${{ env.FIRMWARE_NAME }}" >> $GITHUB_ENV
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.FIRMWARE_NAME }}
        path: |
          .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/${{ env.FIRMWARE_NAME }}.bin
          .pio/build/*.h
