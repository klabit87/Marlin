name: Build Configs

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [ marlin-2.1.1 ]
  pull_request:
    branches: [ marlin-2.1.1 ]
  workflow_dispatch:

jobs:
  Build-Default:
    name: Build Default Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [G32,N32]
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Run OS Update & Install PlatformIO
      run: |
        sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
        python -m pip install --upgrade pip
        pip install wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
      run: make -f Makefile.voxelab Default-NoProbe
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: Default-NoProbe-${{ matrix.chip }}.bin
        path: .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/firmware*.bin
  
  Build-BLTouch:
    name: Build BL-Touch Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [G32,N32]
        grid: [3,4,5,9]
        highspeed: [true,false]
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Run OS Update & Install PlatformIO
      run: |
        sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
        python -m pip install --upgrade pip
        pip install wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
        HS: ${{ matrix.highspeed }}
      run: make -f Makefile.voxelab BLTouch
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: BLTouch-${{ matrix.grid }}x${{ matrix.grid }}${{ matrix.highspeed == 'true' && '-HS' || '' }}-${{ matrix.chip }}.bin
        path: .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/firmware*.bin
  
  Build-ManualMesh:
    name: Build Manual-Mesh Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [G32,N32]
        grid: [3,4,5]
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Run OS Update & Install PlatformIO
      run: |
        sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
        python -m pip install --upgrade pip
        pip install wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
      run: make -f Makefile.voxelab ManualMesh
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: ManualMesh-${{ matrix.grid }}x${{ matrix.grid }}-${{ matrix.chip }}.bin
        path: .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/firmware*.bin
 
  Build-UBL-BLTouch:
    name: Build UBL with BL-Touch Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [G32,N32]
        grid: [10,15]
        highspeed: [true,false]
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Run OS Update & Install PlatformIO
      run: |
        sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
        python -m pip install --upgrade pip
        pip install wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
        HS: ${{ matrix.highspeed }}
      run: make -f Makefile.voxelab UBL-BLTouch
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: UBL-BLTouch-${{ matrix.grid }}x${{ matrix.grid }}${{ matrix.highspeed == 'true' && '-HS' || '' }}-${{ matrix.chip }}.bin
        path: .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/firmware*.bin
  
  Build-UBL-NoProbe:
    name: Build UBL with NoProbe Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: [G32,N32]
        grid: [3,5]
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Run OS Update & Install PlatformIO
      run: |
        sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
        python -m pip install --upgrade pip
        pip install wheel
        pip install --upgrade platformio
    - name: Run PlatformIO
      id: build_configs
      env:
        AQUILA_VER: ${{ matrix.chip }}
        GRID: ${{ matrix.grid }}
      run: make -f Makefile.voxelab UBL-NoProbe
    - name: Upload Build Binary
      uses: actions/upload-artifact@v3
      with:
        name: UBL-NoProbe-${{ matrix.grid }}x${{ matrix.grid }}-${{ matrix.chip }}.bin
        path: .pio/build/STM32F103RET6_voxelab_aquila_${{ matrix.chip }}/firmware*.bin
